<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<mvc:resources  location="/resources/"  mapping="/resource/**"/>
	
	<jpa:repositories base-package="mum.edu.booking_system.domain.repository" />
 
   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="mum.edu.booking_system.domain" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
       <!-- 
    validate: validate the schema, makes no changes to the database.
    update: update the schema.
    create: creates the schema, destroying previous data.
    create-drop: drop the schema at the end of the session.
   These options intended to be developers tools and not to facilitate any production level databases 
            <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
     -->
      
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">create-drop</prop> 
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
         </props>
      </property>
   </bean>
 
 	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/hotel" />
		<property name="username" value="root" />
		<property name="password" value="alain" />
	</bean>

 
   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactory" />
   </bean>
   
     
   <tx:annotation-driven transaction-manager="transactionManager"/>
 
   <bean id="persistenceExceptionTranslationPostProcessor"
      class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
      
   <bean class="org.springframework.data.web.config.SpringDataWebConfiguration" />
	
	<!-- <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService"/>

	<mvc:annotation-driven conversion-service="conversionService">
	  <mvc:argument-resolvers>
	    <bean class="org.springframework.data.web.SortHandlerMethodArgumentResolver" id="sortResolver"/>
	    <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" id="pagingResolver">
	      <constructor-arg ref="sortResolver"/>
	    </bean>
	  </mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<bean class="org.springframework.data.repository.support.DomainClassConverter">
	  <constructor-arg ref="conversionService"/>
	</bean>-->
      
		
</beans>
